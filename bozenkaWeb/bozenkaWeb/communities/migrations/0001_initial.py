# Generated by Django 5.0.6 on 2024-07-17 14:13

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Community',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='Name of Community')),
                ('description', models.TextField(verbose_name='Description')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Creation date')),
                ('icon', models.ImageField(upload_to='community_icons', verbose_name='Icon')),
                ('members_count', models.IntegerField(default=0, verbose_name='Count of Members')),
            ],
            options={
                'verbose_name': 'Community',
                'verbose_name_plural': 'Communities',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Name of tag')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
            },
        ),
        migrations.CreateModel(
            name='CommunityER',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('er', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='ER')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Date of Recording')),
                ('community', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='communities.community', verbose_name='Community')),
            ],
            options={
                'verbose_name': 'ER growth record',
                'verbose_name_plural': 'ER growth records',
            },
        ),
        migrations.CreateModel(
            name='CommunityGrowth',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('members_count', models.IntegerField(default=0, verbose_name='Count of Members')),
                ('growth', models.IntegerField(verbose_name='Growth of Members')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Date of Recording')),
                ('community', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='communities.community', verbose_name='Community')),
            ],
            options={
                'verbose_name': 'Community growth record',
                'verbose_name_plural': 'Community growth records',
            },
        ),
        migrations.CreateModel(
            name='CommunityManager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=10, verbose_name='Status')),
                ('contact_link', models.URLField(verbose_name='Contact link')),
                ('avatar', models.ImageField(upload_to='manager_avatars', verbose_name='Avatar')),
                ('community', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='communities.community', verbose_name='Community')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Community manager',
                'verbose_name_plural': 'Community managers',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Text')),
                ('source', models.CharField(max_length=50, verbose_name='Source')),
                ('views', models.IntegerField(default=0, verbose_name='Views')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation date')),
                ('community', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='communities.community', verbose_name='Community')),
            ],
            options={
                'verbose_name': 'Post',
                'verbose_name_plural': 'Posts',
            },
        ),
        migrations.CreateModel(
            name='LatestPostView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('views', models.IntegerField(default=0, verbose_name='Count of views')),
                ('recording_date', models.DateTimeField(auto_now_add=True, verbose_name='Date of recording')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='communities.post', verbose_name='Post')),
            ],
            options={
                'verbose_name': 'Latest post views record',
                'verbose_name_plural': 'Latest post views records',
            },
        ),
        migrations.CreateModel(
            name='SocialLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(max_length=20, verbose_name='Social Platform')),
                ('link', models.URLField(verbose_name='Social link')),
                ('community', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='communities.community', verbose_name='Community')),
            ],
            options={
                'verbose_name': 'Social media link',
                'verbose_name_plural': 'Social media links',
            },
        ),
        migrations.AddField(
            model_name='community',
            name='tags',
            field=models.ManyToManyField(to='communities.tag', verbose_name='Tags'),
        ),
    ]
