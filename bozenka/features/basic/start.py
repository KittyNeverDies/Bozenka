from aiogram import F
from aiogram.enums import ChatType
from aiogram.filters import Command
from aiogram.types import InlineKeyboardMarkup, Message, CallbackQuery, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder

from bozenka.features.main import BasicFeature
from bozenka.instances.customizable_features_list import categorized_customizable_features, text_transcription
from bozenka.instances.telegram.utils.callbacks_factory import HelpCategory, HelpBackCategory, HelpFeature, HelpBack
from bozenka.features.user.text_generation import gpt_categories_keyboard
from bozenka.instances.current_version import build, is_updated

telegram_main_menu = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –≤ –≤–∞—à –≥—Ä—É–ø–ø–æ–≤–æ–π —á–∞—Ç üîå", callback_data="addtochat")],
            [InlineKeyboardButton(text="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–µ –±–æ—Ç–∞ üî®", callback_data="functional")],
            [InlineKeyboardButton(text="–û–± –¥–∞–Ω–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ ‚ÑπÔ∏è", callback_data="aboutdevs")],
            [InlineKeyboardButton(text="–û –¥–∞–Ω–Ω–æ–º –∑–∞–ø—É—â–µ–Ω–Ω–æ–º —ç–∫–∑–µ–ø–ª—è—Ä–µ ‚ÑπÔ∏è", callback_data="aboutbot")],
            [InlineKeyboardButton(text="–ù–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥ —Å —Ç–µ–∫—Å—Ç–æ–≤—ã–º –ò–ò ü§ñ", callback_data="dialogai")],
            [InlineKeyboardButton(text="–ù–∞—á–∞—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π üñº", callback_data="dialogimage")],
        ]
    )


# Help related keyboards
def main_help_keyboard() -> InlineKeyboardMarkup:
    """
    Generate keyboard for /help command
    :return: InlineKeyboardMarkup
    """
    kb = InlineKeyboardBuilder()
    for category in categorized_customizable_features:
        kb.row(InlineKeyboardButton(text=text_transcription[category],
                                    callback_data=HelpCategory(category_name=category).pack()))

    return kb.as_markup()


def help_category_keyboard(category: str) -> InlineKeyboardMarkup:
    """
    Generate keyboard for one of categories
    :param category: Category name
    :return: InlineKeyboardMarkup
    """
    kb = InlineKeyboardBuilder()
    for setting in categorized_customizable_features[category]:
        kb.row(InlineKeyboardButton(text=setting.telegram_setting_name,
                                    callback_data=HelpFeature(
                                        feature_index=categorized_customizable_features[category].index(setting),
                                        feature_category=category
                                    ).pack()))
    kb.row(InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É –∫–∞—Ç–µ–≥–æ—Ä–∏–π",
                                callback_data=HelpBack(back_to="category").pack()))
    return kb.as_markup()


def help_feature_keyboard(category: str) -> InlineKeyboardMarkup:
    """
    Just button for function of /help
    :param category: Category name
    :return: InlineKeyboardMarkup
    """
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É —Ñ—É–Ω–∫—Ü–∏–π",
                              callback_data=HelpBackCategory(category_name=category).pack())]
    ])
    return kb


class Start(BasicFeature):
    """
    A class of /start command
    All staff related to it will be here
    """

    #   There starting a help category of handlers
    #   It's related to one of menus
    #   Showing information about features, will be remade later :D

    @staticmethod
    async def back_help_categories_handler(call: CallbackQuery, callback_data: HelpBack) -> None:
        """
        Query, what shows list of  features to get support back.
        :param call: CallbackQuery object
        :param callback_data: Helpback class
        :return: None
        """
        await call.message.edit_text("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –ø–æ –∫–æ—Ç–æ—Ä–æ–π –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å:",
                                     reply_markup=main_help_keyboard())
        await call.answer()

    @staticmethod
    async def help_features_handler(call: CallbackQuery, callback_data: HelpCategory | HelpBackCategory) -> None:
        """
        Handler of CallbackQuery, what shows list of  features to get support.
        :param call: CallbackQuery object
        :param callback_data: HelpCategory or HelpBack class
        :return: None
        """
        await call.message.edit_text("–í—ã–±–µ—Ä–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –ø–æ –∫–æ—Ç–æ—Ä–æ–π –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å",
                                     reply_markup=help_category_keyboard(category=callback_data.category_name))
        await call.answer()

    @staticmethod
    async def feature_info_handler(call: CallbackQuery, callback_data: HelpFeature) -> None:
        """
        Handler of CallbackQuery, what shows information about bozenka feature
        :param call: CallbackQuery ojbect
        :param callback_data: HelpFeature object
        :return: None
        """
        await call.message.edit_text(
            categorized_customizable_features[callback_data.feature_category][callback_data.feature_index]. telegram_setting_description,
            reply_markup=help_feature_keyboard(category=callback_data.feature_category))
        await call.answer()

    @staticmethod
    async def help_menu_handler(call: CallbackQuery) -> None:
        """
        Handler of CallbackQuery, what shows menu of help
        :param call: CallbackQuery object
        :return: None
        """
        await call.message.edit_text("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ñ—É–Ω–∫—Ü–∏–π, –ø–æ –∫–æ—Ç–æ—Ä–æ–π –≤–∞–º –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å ü§ñ",
                                     reply_markup=main_help_keyboard())
        await call.answer()

    @staticmethod
    async def add_to_menu_handler(call: CallbackQuery) -> None:
        """
        Handler of CallbackQuery, what shows a link to add bozenka into user group chat
        :param call: CallbackQuery object
        :return: None
        """
        # Getting bot
        me = await call.message.bot.me()

        # Generating special keyboard
        kb = InlineKeyboardBuilder()
        kb.button(text="–î–æ–±–∞–≤–∏—Ç—å –≤ –≤–∞—à –≥—Ä—É–ø–æ–≤–æ–π —á–∞—Ç üîå",
                  url="https://t.me/"
                      f"{me.username}?"
                      "startgroup&"
                      "admin=promote_members+delete_messages+restrict_members+invite_users+pin_messages+manage_video_chats")
        kb.row(InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è üîô", callback_data="back"))

        # Answering
        await call.message.edit_text("–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –±–æ–∑–µ–Ω—å–∫—É –≤ –≤–∞—à –≥—Ä—É–ø–ø–æ–≤–æ–π —á–∞—Ç, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º:",
                                     reply_markup=kb.as_markup())
        await call.answer()

    @staticmethod
    async def about_instance_callback_handler(call: CallbackQuery) -> None:
        """
        Handler of CallbackQuery, what shows information about current running instance
        :param call: CallbackQuery object
        :return: Nothing
        """
        kb = InlineKeyboardMarkup(inline_keyboard=[[
            InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è üîô", callback_data="back")
        ]])
        me = await call.message.bot.get_me()
        update_status = {False: "—Ç—Ä–µ–±—É–µ—Ç—Å—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–æ—Ç–∞ üîº",
                         True: "–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è, –ø–æ—Å–ª–µ–¥–Ω—è—è –≤–µ—Ä—Å–∏—è ‚úÖ"}
        await call.message.edit_text(
            f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –¥–∞–Ω–Ω–æ–º –∑–∞–ø—É—â–µ–Ω–Ω–æ–º —ç–∫–∑–µ–º–ø–ª—è—Ä–µ –±–æ–∑–µ–Ω—å–∫–∏:\n"
            f"–ê–∫–∫–∞—É–Ω—Ç –±–æ—Ç–∞: {me.mention_html()}\n"
            f"–ó–∞–ø—É—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –±–æ—Ç–∞ <code>{build}</code>\n",
            f"–ù—É–∂–Ω–æ –ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {update_status[is_updated]}",
            reply_markup=kb)
        await call.answer()

    @staticmethod
    async def about_developers_handler(call: CallbackQuery) -> None:
        """
        Handler of CallbackQuery, what shows information about bozenka & it's development
        :param call: CallbackQuery object
        :return: Nothing
        """
        kb = InlineKeyboardMarkup(inline_keyboard=[[
            InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è üîô", callback_data="back")
        ]])
        await call.message.edit_text("""
–ë–æ–∑–µ–Ω—å–∫–∞ - —ç—Ç–æ –º—É–ª—å—Ç–∏—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π (–≤ –±—É–¥—É—â–µ–º –∫—Ä–æ—Å—Å–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω—ã–π) –±–æ—Ç.\n
–û–Ω —É–º–µ–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å –≥—Ä—É–ø–ø–æ–≤—ã–º–∏ —á–∞—Ç–∞–º–∏ –∏ –≥–æ—Ç–æ–≤—ã–º–∏ –Ω–µ–π—Ä–æ–Ω–Ω—ã–º–∏ —Å–µ—Ç—è–º–∏ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞ –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.
–ë–æ–∑–µ–Ω—å–∫–∞ —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –∫–æ–º–º–∞–Ω–¥–æ–π, –∫–æ—Ç–æ—Ä–∞—è —Å–æ—Å—Ç–æ–∏—Ç –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∏–∑ –æ–¥–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞.\n
–ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ –ø—Ä–æ–µ–∫—Ç–∞\n
–ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–æ–¥ –ª–∏—Ü–µ–Ω–∑–∏–µ–π GPL-3.0, –∏—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ –ø—Ä–æ–µ–∫—Ç–∞ –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ–≥–¥–∞ <a href="https://github.com/kittyneverdies/bozenka/">–∑–¥–µ—Å—å</a>
–ö–∞–Ω–∞–ª —Å –Ω–æ–≤–æ—Å—Ç—è–º–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è <a href="https://t.me/bozodevelopment">–∑–¥–µ—Å—å</a>
        """, reply_markup=kb, disable_web_page_preview=True)

    @staticmethod
    async def start_dialog_handler(call: CallbackQuery) -> None:
        """
        Handler of CallbackQuery, what shows list of Categories, avaible to use as chatbot
        :param call: CallbackQuery object
        :return: Nothing
        """
        await call.message.edit_text("–ü–æ–∂–∞–ª—É—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–∏c / –±–∏–±–ª–∏–æ—Ç–µ–∫—É, —á–µ—Ä–µ–∑ –∫–æ—Ç–æ—Ä—É—é –≤—ã –±—É–¥–µ—Ç–µ –æ–±—â–∞—Ç—å—Å—è",
                                     reply_markup=gpt_categories_keyboard
                                     (user_id=call.from_user.id))

    @staticmethod
    async def start_callback_handler(call: CallbackQuery) -> None:
        """
        /start command function handler. Just back it by clicking on button.
        Shows menu and basic information about bozenka
        :param call: Message telegram object
        :return: Nothing
        """
        await call.message.edit_text("""
–ü—Ä–∏–≤–µ—Ç üëã
–Ø - –±–æ–∑–µ–Ω—å–∫–∞, –±–æ—Ç —Å –æ—Ç–∫—Ä—ã—Ç—ã–º –∏—Å—Ö–æ–¥–Ω—ã–º –∫–æ–¥–æ–º, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∑–∞–¥–∞—á–∞—Ö. 

–í–æ—Ç —á—Ç–æ —Ç—ã –º–æ–∂–µ—à—å —Å–¥–µ–ª–∞—Ç—å —Å –ø–æ–º–æ—â—å—é –º–µ–Ω—é:
‚Ä¢ –î–æ–±–∞–≤–∏—Ç—å –≤ —á–∞—Ç: –¥–æ–±–∞–≤–ª—è–µ—Ç –º–µ–Ω—è –≤ –≥—Ä—É–ø–ø–æ–≤–æ–π —á–∞—Ç, —á—Ç–æ–±—ã —è –º–æ–≥ –≤—ã–ø–æ–ª–Ω—è—Ç—å —Å–≤–æ–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –≤–Ω—É—Ç—Ä–∏ –Ω–µ–≥–æ.
‚Ä¢ –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª: –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –∏ –∫–æ–º–∞–Ω–¥, –∫–æ—Ç–æ—Ä—ã–µ —è –º–æ–≥—É –≤—ã–ø–æ–ª–Ω–∏—Ç—å.
‚Ä¢ –û —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞—Ö: –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–∞–Ω–¥–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Å–æ–∑–¥–∞–ª–∏ –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç —ç—Ç–æ–≥–æ –±–æ—Ç–∞.
‚Ä¢ –û –∑–∞–ø—É—â–µ–Ω–Ω–æ–º —ç–∫–∑–µ–º–ø–ª—è—Ä–µ: –≤—ã–≤–æ–¥–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—Å–∏–∏ –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –∑–∞–ø—É—â–µ–Ω–Ω–æ–≥–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–æ—Ç–∞.
‚Ä¢ –ù–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥ —Å –ò–ò: –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥ —Å –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–º –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–æ–º, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.
‚Ä¢ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –∑–∞–¥–∞–Ω–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏ –ø—Ä–æ–º—Ç–∞

–í–æ—Ç –Ω—É–∂–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –æ–±–æ –º–Ω–µ:
‚Ä¢ <a href='https://t.me/bozodevelopment'>–ö–∞–Ω–∞–ª —Å –Ω–æ–≤–æ—Å—Ç—è–º–∏ –æ–± —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</a>
‚Ä¢ <a href='https://github.com/kittyneverdies/bozenka/'>–ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ –Ω–∞ Github</a>

–ß—Ç–æ–±—ã –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–∞–∫–æ–π-–ª–∏–±–æ —Ñ—É–Ω–∫—Ü–∏–µ–π, –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ. 
–ï—Å–ª–∏ —É —Ç–µ–±—è –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Å—è –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –∫–æ–º–∞–Ω–¥–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∏–ª–∏ –Ω–∞–ø–∏—Å–∞—Ç—å –≤ –æ–±—Å—É–∂–¥–µ–Ω–∏–∏ —Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª–∞. 
–£–¥–∞—á–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è!
    """, reply_markup=telegram_main_menu, disable_web_page_preview=True)

    @staticmethod
    async def start_cmd_handler(msg: Message) -> None:
        """
        /start command function handler
        Shows menu and basic information about bozenka
        :param msg: Message telegram object
        :return: Nothing
        """
        await msg.answer("""
–ü—Ä–∏–≤–µ—Ç üëã
–Ø - –±–æ–∑–µ–Ω—å–∫–∞, –±–æ—Ç —Å –æ—Ç–∫—Ä—ã—Ç—ã–º –∏—Å—Ö–æ–¥–Ω—ã–º –∫–æ–¥–æ–º, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∑–∞–¥–∞—á–∞—Ö. 

–í–æ—Ç —á—Ç–æ —Ç—ã –º–æ–∂–µ—à—å —Å–¥–µ–ª–∞—Ç—å —Å –ø–æ–º–æ—â—å—é –º–µ–Ω—é:
‚Ä¢ –î–æ–±–∞–≤–∏—Ç—å –≤ —á–∞—Ç: –¥–æ–±–∞–≤–ª—è–µ—Ç –º–µ–Ω—è –≤ –≥—Ä—É–ø–ø–æ–≤–æ–π —á–∞—Ç, —á—Ç–æ–±—ã —è –º–æ–≥ –≤—ã–ø–æ–ª–Ω—è—Ç—å —Å–≤–æ–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –≤–Ω—É—Ç—Ä–∏ –Ω–µ–≥–æ.
‚Ä¢ –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª: –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –∏ –∫–æ–º–∞–Ω–¥, –∫–æ—Ç–æ—Ä—ã–µ —è –º–æ–≥—É –≤—ã–ø–æ–ª–Ω–∏—Ç—å.
‚Ä¢ –û —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞—Ö: –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–∞–Ω–¥–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Å–æ–∑–¥–∞–ª–∏ –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç —ç—Ç–æ–≥–æ –±–æ—Ç–∞.
‚Ä¢ –û –∑–∞–ø—É—â–µ–Ω–Ω–æ–º —ç–∫–∑–µ–º–ø–ª—è—Ä–µ: –≤—ã–≤–æ–¥–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—Å–∏–∏ –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –∑–∞–ø—É—â–µ–Ω–Ω–æ–≥–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–æ—Ç–∞.
‚Ä¢ –ù–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥ —Å –ò–ò: –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥ —Å –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–º –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–æ–º, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.
‚Ä¢ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –∑–∞–¥–∞–Ω–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏ –ø—Ä–æ–º—Ç–∞

–í–æ—Ç –Ω—É–∂–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –æ–±–æ –º–Ω–µ:
‚Ä¢ <a href='https://t.me/bozodevelopment'>–ö–∞–Ω–∞–ª —Å –Ω–æ–≤–æ—Å—Ç—è–º–∏ –æ–± —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</a>
‚Ä¢ <a href='https://github.com/kittyneverdies/bozenka/'>–ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ –Ω–∞ Github</a>

–ß—Ç–æ–±—ã –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–∞–∫–æ–π-–ª–∏–±–æ —Ñ—É–Ω–∫—Ü–∏–µ–π, –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ. 
–ï—Å–ª–∏ —É —Ç–µ–±—è –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Å—è –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –∫–æ–º–∞–Ω–¥–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∏–ª–∏ –Ω–∞–ø–∏—Å–∞—Ç—å –≤ –æ–±—Å—É–∂–¥–µ–Ω–∏–∏ —Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª–∞. 
–£–¥–∞—á–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è!
    """, reply_markup=telegram_main_menu, disable_web_page_preview=True)

    """
    Telegram feature settings
    """
    # Telegram feature settings
    telegram_setting_in_list = False
    telegram_category = None
    telegram_commands: dict[str: str] = {"start": "Command to start work with bozenka the bot"}
    telegram_cmd_avaible = True  # Is a feature have a commands
    telegram_message_handlers = [
            [start_cmd_handler, [Command(commands=["start"]), F.chat.type == ChatType.PRIVATE]],
        ]
    telegram_callback_handlers = [
            # Start menu
            [start_dialog_handler, [F.data == "dialogai"]],
            [add_to_menu_handler, [F.data == "addtochat"]],
            [about_developers_handler, [F.data == "aboutdevs"]],
            [about_instance_callback_handler, [F.data == "aboutbot"]],
            [start_callback_handler, [F.data == "back"]],
            # Help menu
            [help_menu_handler, [F.data == "functional"]],
            [feature_info_handler, [HelpFeature.filter()]],
            [help_features_handler, [HelpBackCategory.filter()]],
            [help_features_handler, [HelpCategory.filter()]],
            [help_menu_handler, [HelpBack.filter(F.back_to == "category")]]
        ]
