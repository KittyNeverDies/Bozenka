import logging

from aiogram.fsm.context import FSMContext
from aiogram.types import Message as Message, FSInputFile

from bozenka.generative.kadinsky import kadinsky_gen
from bozenka.instances.telegram.utils.keyboards import delete_keyboard, image_generation_keyboard, \
    image_response_keyboard
from bozenka.instances.telegram.utils.simpler import GeneratingImages


async def already_generating(msg: Message, state: FSMContext):
    """
    Giving response, if generating image for user right now,
    but user still asks something
    :param msg: Message telegram object
    :param state: FSM state of bot
    :return:
    """
    await msg.answer(
        "–ü–æ–¥–æ–∂–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –º—ã —É–∂–µ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –≤–∞—Å, –ø–æ–¥–æ–∂–¥–∏—Ç–µ, –∫–æ–≥–¥–∞ –º—ã –æ—Ç–≤–µ—Ç–∏–º –Ω–∞ –≤–∞—à –ø–µ—Ä–µ–¥—ã–¥—É—â–∏–π –≤–æ–ø—Ä–æ—Å",
        reply_markup=delete_keyboard(admin_id=msg.from_user.id))


async def start_imagine_cmd(msg: Message, state: FSMContext):
    """
    /iamgine command handler, start menu
    :param msg: Message telegram object
    :param state: FSM state of bot
    :return:
    """
    if await state.get_state():
        return
    await msg.answer("–ü–æ–∂–∞–ª—É—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–∏—Å / –º–æ–¥–µ–ª—å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π",
                     reply_markup=image_generation_keyboard(user_id=msg.from_user.id))


async def kadinsky_generating_images(msg: Message, state: FSMContext):
    """
    Message handler for kandinsky to generate image by text from message
    :param msg: Message telegram object
    :param state: FSM state of bot
    :return:
    """
    await state.set_state(GeneratingImages.generating)
    message = await msg.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ, –º—ã –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ ‚è∞\n"
                               "–ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ–π–¥–µ—Ç –Ω–µ —Ç–∞–∫, –º—ã –≤–∞–º —Å–æ–æ–±—â–∏–º üëå")
    data = await state.get_data()

    try:

        model_id = kadinsky_gen.get_model()
        width, height = data["set_size"].split("x")
        generating = kadinsky_gen.generate(model=model_id,
                                           prompt=msg.text,
                                           width=int(width),
                                           height=int(height))
        result = kadinsky_gen.check_generation(request_id=generating)

        if result:
            path = kadinsky_gen.save_image(result[0], f"telegram_{msg.from_user.id}")
            photo = FSInputFile(path)
            await msg.answer_photo(photo=photo,
                                   caption=msg.text,
                                   reply_markup=image_response_keyboard(user_id=msg.from_user.id))
            await message.delete()
        else:
            await message.edit_text("–ü—Ä–æ—Å—Ç–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ üòî\n"
                                    "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ–≤—Ä–µ—Ä–∞ kadinsky —Ä–∞–±–æ—Ç–∞—é—Ç –∏ –≤–∞—à –ø—Ä–æ–º—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –Ω–µ–ø–æ–¥–æ–±–∞—é—â–∏–º –∏ –Ω–µ–ø—Ä–∏–µ–º–ª–∏–º—ã–º\n"
                                    "–ï—Å–ª–∏ —ç—Ç–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /cancel",
                                    reply_markup=image_response_keyboard(user_id=msg.from_user.id))

    except Exception as ex:
        logging.log(msg=f"Get an exception for generating answer={ex}",
                    level=logging.ERROR)
    finally:
        logging.log(msg=f"Generated image for user_id={msg.from_user.id} with promt",
                    level=logging.INFO)
    await state.set_state(GeneratingImages.ready_to_generate)


async def cancefl_answering(msg: Message, state: FSMContext):
    """
    Canceling generating images for user
    Works on command /cancel
    :param msg: Message telegram object
    :param state: FSM state of bot
    :return:
    """
    current = await state.get_state()
    if current is None:
        return
    await state.clear()
    await msg.answer("–£–¥–∞—á–∞ ‚úÖ\n"
                     "–î–∏–∞–ª–æ–≥ –æ—Ç–º–µ–Ω—ë–Ω!", reply_markup=delete_keyboard(admin_id=msg.from_user.id))
